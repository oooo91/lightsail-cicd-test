name: test #파이프라인 이름

on: pull_request #pull request 가 생기면 이 워크플로우를 발동시켜라

#ubuntu 가상 서버라고 생각하면 된다.
#새로운 그 풀 리퀘스트 요청된 코드를 받아와야한다. 
#그리고 npm install 하고 redis 도 여기에 설치한다.
#그 다음에 npm run test 하고 npm run build 하면 된다.
jobs:
    test:
        runs-on: ubuntu-22.04 #서버와 동일한 버전
        steps: 
            - name: Checkout repository # 리포지토리에서 코드 가져오기
              uses: actions/Checkout@v3 #오픈소스 패키지 사용하듯이 actions 도 마켓 플레이스가 있다. 액션을 지정한다.
            - name: Node.js setup #node js 설치
              uses: actions/setup-node@v3 
              with:
                node-version: "18" #서버와 동일한 18버전
            - name: Install npm packages #node 설치했으니 패키지 설치
              run: npm ci #npm ci (=npm install)
            - name: Install and run redis-server #redis 설치 및 실행
              run: | #여러 줄 사용하고 싶을 때 | 사용
                sudo apt-get update
                sudo apt-get install -y redis-server
                redis-server --daemonize yes --requirepass test_env --port 6380
            - name: Run test #테스트 실행
              run: npm run test:ci #npm run test 를 하면 우리가 테스트 코드 시 재실행하게 --watch all 을 해놔서 ci 에선 멈춰야한다. json 에 추가한 test:ci 를 실행하자

            - name: test build #테스트가 성공했으면 빌드 실행
              run: npm run build


#이제 푸쉬하고 풀 리퀘스트를 요청하면 이 yml 파일을 git action 에 트리거해준다. (실행된다.)



            